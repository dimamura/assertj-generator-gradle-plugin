buildscript {
    ext.kotlin_version = '1.2.0'
    ext.dokka_version = '0.9.16'

    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
    }
}

plugins {
    id 'java-gradle-plugin'
    id "com.gradle.plugin-publish" version "0.9.9"
    id 'org.jmailen.kotlinter' version '1.5.0'
}

group 'com.github.fhermansson'
version '1.1.2'

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = 1.8

repositories {
    google()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation("org.assertj:assertj-assertions-generator:2.2.0") {
        exclude module: 'logback-classic'
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

dokka {
    outputFormat = "javadoc"
}

gradlePlugin {
    plugins {
        assertjGenerator {
            id = 'com.github.fhermansson.assertj-generator'
            implementationClass = 'com.github.fhermansson.gradle.assertj.plugin.AssertjGeneratorPlugin'
        }
    }
}
pluginBundle {
    website = 'https://github.com/fhermansson/assertj-generator-gradle-plugin'
    vcsUrl = 'https://github.com/fhermansson/assertj-generator-gradle-plugin'
    description = 'Generate Assertj assertion classes.'
    tags = ['code-generation', 'assertj', 'java']

    plugins {
        assertjGenerator {
            id = 'com.github.fhermansson.assertj-generator'
            displayName = 'Assertj Generator plugin'
        }
    }
}

afterEvaluate {
    javadoc.enabled = false
    publishPluginJavaDocsJar.from(dokka)
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task wrapper(type: Wrapper) {
   gradleVersion = '4.10.3'
}
